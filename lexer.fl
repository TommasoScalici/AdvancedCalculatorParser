%{
    #include <math.h>
    #include <stdio.h>
    #include <stdlib.h>
    #include "parser.tab.h"
%}

%option yylineno
%option noyywrap

digit [0-9]
number {digit}+

%%


    /* Unary and Binary Operators */

"+"             { yylval.string = strdup(yytext); return(PLUS); }
"-"             { yylval.string = strdup(yytext); return(MINUS); }
"*"             { yylval.string = strdup(yytext); return(MUL); }
"/"             { yylval.string = strdup(yytext); return(DIV); }
"="             { yylval.string = strdup(yytext); return(ASSIGN); }
"+="            { yylval.string = strdup(yytext); return(ASSIGN_PLUS); }
"-="            { yylval.string = strdup(yytext); return(ASSIGN_MINUS); }
"*="            { yylval.string = strdup(yytext); return(ASSIGN_MUL); }
"/="            { yylval.string = strdup(yytext); return(ASSIGN_DIV); }


    /* Parenthesis */

"("             { return(PAR_OPEN); }
")"             { return(PAR_CLOSED); }


    /* Functions */

"print"         { return(PRINT); }
"log"
"sin"
"cos"
"tan"
"pow"
"sqrt"

\n              { return(NEW_LINE); }

[a-z]           { yylval.identifier.name = strdup(yytext); return(ID); }
{number}        { yylval.int_t = atoi(yytext); return(NUM_INT); }
[0-9]*\.[0-9]*  { yylval.float_t = atof(yytext); return(NUM_REAL); } 
[ ] { }

%%